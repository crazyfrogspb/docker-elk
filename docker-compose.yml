version: '2'

services:

  elasticsearch-node1:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    container_name: elasticsearch-node1
    command: >
        elasticsearch
        --node.name="node1"
        --cluster.name="smapp-elastic"
        --network.host=0.0.0.0
        --discovery.zen.ping.multicast.enabled=false
        --discovery.zen.ping.unicast.hosts="192.168.0.71,192.168.0.81"
        --node.master=true
        --node.data=true
        --bootstrap.mlockall=true
    ports:
      - "9201:9200"
      - "9301:9300"
    environment:
      discovery.type: zen
      ES_JAVA_OPTS: "-Xmx8g"
      ES_HEAP_SIZE: "4g"
    networks:
      default:
        ipv4_address: 192.168.0.71
    restart: unless-stopped

  elasticsearch-node2:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: $ELK_VERSION
    container_name: elasticsearch-node2
    command: >
        elasticsearch
        --node.name="node2"
        --cluster.name="smapp-elastic"
        --network.host=0.0.0.0
        --discovery.zen.ping.multicast.enabled=false
        --discovery.zen.ping.unicast.hosts="192.168.0.71,192.168.0.81"
        --node.master=false
        --node.data=true
        --bootstrap.mlockall=true
    ports:
      - "9202:9200"
      - "9302:9300"
    environment:
      discovery.type: zen
      ES_JAVA_OPTS: "-Xmx8g"
      ES_HEAP_SIZE: "4g"
    networks:
      default:
        ipv4_address: 192.168.0.81
    restart: unless-stopped

  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: $ELK_VERSION
    volumes:
      - ./kibana/config/:/usr/share/kibana/config:ro
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch-node1

networks:
  elk:
    driver: bridge
